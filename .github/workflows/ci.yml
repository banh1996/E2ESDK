name: E2E-SDK CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust-version: [1.65.0]
        target: [x86_64-pc-windows-msvc, x86_64-unknown-linux-gnu, x86_64-apple-ios, x86_64-linux-android]
        toolchain:
          - stable
          - beta
          - nightly

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}

      - name: Install target
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo build --target ${{ matrix.target }}

      - name: Test
        run: |
          cargo build
          cargo rustc --crate-type=cdylib
          cargo test -- --nocapture --test-threads=1

  build_macos:
    runs-on: macos-latest
    strategy:
      matrix:
        rust-version: [1.65.0]
        target: [x86_64-apple-ios]
        toolchain:
          - stable
          - beta
          - nightly

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}

      - name: Install target
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo build --target ${{ matrix.target }}

      - name: Test
        run: |
          cargo build
          cargo rustc --crate-type=cdylib
          cargo test -- --nocapture --test-threads=1

  build_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        rust-version: [1.65.0]
        target: [x86_64-pc-windows-msvc]
        toolchain:
          - stable
          - beta
          - nightly

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}

      - name: Install target
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo build --target ${{ matrix.target }}

      - name: Test
        run: |
          cargo build
          cargo rustc --crate-type=cdylib
          cargo test -- --nocapture --test-threads=1